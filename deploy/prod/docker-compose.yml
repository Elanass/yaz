version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: adci_db
      POSTGRES_USER: adci_user
      POSTGRES_PASSWORD: adci_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U adci_user -d adci_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build: 
      context: ../../
      dockerfile: deploy/prod/Dockerfile
    environment:
      - DATABASE_URL=postgresql://adci_user:adci_pass@db:5432/adci_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ENVIRONMENT=production
      - API_BASE_URL=${API_BASE_URL:-http://localhost:8000/api/v1}
      - LOG_LEVEL=INFO
      - ENABLE_SWAGGER=false
      - PATIENT_DATA_ENCRYPTION=true
      - ENABLE_AUDIT_LOGGING=true
      - WORKERS=${API_WORKERS:-4}
      - MAX_REQUESTS=${MAX_REQUESTS:-1000}
      - MAX_REQUESTS_JITTER=${MAX_REQUESTS_JITTER:-100}
      - KEEPALIVE=${KEEPALIVE:-65}
    deploy:
      replicas: ${APP_REPLICAS:-2}
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
      restart_policy:
        condition: on-failure
        max_attempts: 3
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../data/uploads:/app/data/uploads
      - ../../logs:/app/logs
      - ../../web/static:/app/web/static
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]

  worker:
    build: 
      context: ../../
      dockerfile: deploy/prod/Dockerfile
    environment:
      - DATABASE_URL=postgresql://adci_user:adci_pass@db:5432/adci_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - PATIENT_DATA_ENCRYPTION=true
      - ENABLE_AUDIT_LOGGING=true
    command: ["python", "-m", "features.analysis.worker"]
    deploy:
      replicas: ${WORKER_REPLICAS:-2}
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../data/uploads:/app/data/uploads
      - ../../logs:/app/logs
      
  ipfs:
    image: ipfs/kubo:latest
    volumes:
      - ipfs_data:/data/ipfs
    ports:
      - "5001:5001"
    environment:
      - IPFS_PROFILE=server
    healthcheck:
      test: ["CMD", "ipfs", "dag", "stat", "/ipfs/QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  ipfs_data:
