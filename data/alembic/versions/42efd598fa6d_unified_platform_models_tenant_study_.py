"""unified platform models: tenant, study, subject, case, deliverable, feedback

Revision ID: 42efd598fa6d
Revises: 96b9f4309e6a
Create Date: 2025-08-07 21:34:32.045008

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "42efd598fa6d"
down_revision = "96b9f4309e6a"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_protocols_id", table_name="protocols")
    op.drop_table("protocols")
    op.drop_index("ix_sync_jobs_id", table_name="sync_jobs")
    op.drop_table("sync_jobs")
    op.drop_index("ix_messages_id", table_name="messages")
    op.drop_table("messages")
    op.drop_index("ix_media_files_case_id", table_name="media_files")
    op.drop_index("ix_media_files_created_at", table_name="media_files")
    op.drop_index("ix_media_files_id", table_name="media_files")
    op.drop_index("ix_media_files_patient_id", table_name="media_files")
    op.drop_table("media_files")
    op.drop_index("ix_deliverables_id", table_name="deliverables")
    op.drop_table("deliverables")
    op.drop_index("ix_surgeon_consents_id", table_name="surgeon_consents")
    op.drop_table("surgeon_consents")
    op.drop_index("ix_enhanced_cases_case_number", table_name="enhanced_cases")
    op.drop_index("ix_enhanced_cases_id", table_name="enhanced_cases")
    op.drop_table("enhanced_cases")
    op.drop_table("users")
    op.drop_index(
        "idx_patients_age_gender",
        table_name="patients",
        sqlite_where=sa.text("age IS NOT NULL"),
    )
    op.drop_index(
        "idx_patients_bmi",
        table_name="patients",
        sqlite_where=sa.text("bmi IS NOT NULL"),
    )
    op.drop_table("patients")
    op.drop_index("ix_surgical_proposals_id", table_name="surgical_proposals")
    op.drop_table("surgical_proposals")
    op.drop_index("ix_study_results_id", table_name="study_results")
    op.drop_table("study_results")
    op.drop_index("ix_case_collaborations_id", table_name="case_collaborations")
    op.drop_table("case_collaborations")
    op.drop_table("cases")
    op.drop_index("ix_text_entries_case_id", table_name="text_entries")
    op.drop_index("ix_text_entries_created_at", table_name="text_entries")
    op.drop_index("ix_text_entries_id", table_name="text_entries")
    op.drop_index("ix_text_entries_patient_id", table_name="text_entries")
    op.drop_table("text_entries")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "text_entries",
        sa.Column("id", sa.VARCHAR(length=36), nullable=False),
        sa.Column("patient_id", sa.VARCHAR(length=20), nullable=False),
        sa.Column("case_id", sa.VARCHAR(length=36), nullable=True),
        sa.Column("entry_type", sa.VARCHAR(length=50), nullable=False),
        sa.Column("title", sa.VARCHAR(length=200), nullable=False),
        sa.Column("content", sa.TEXT(), nullable=False),
        sa.Column("tags", sa.TEXT(), nullable=True),
        sa.Column("metadata", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_text_entries_patient_id", "text_entries", ["patient_id"], unique=False
    )
    op.create_index("ix_text_entries_id", "text_entries", ["id"], unique=False)
    op.create_index(
        "ix_text_entries_created_at", "text_entries", ["created_at"], unique=False
    )
    op.create_index(
        "ix_text_entries_case_id", "text_entries", ["case_id"], unique=False
    )
    op.create_table(
        "cases",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("patient_id", sa.VARCHAR(), nullable=False),
        sa.Column("surgery_type", sa.VARCHAR(), nullable=False),
        sa.Column("status", sa.VARCHAR(), nullable=False),
        sa.Column("pre_op_notes", sa.TEXT(), nullable=True),
        sa.Column("post_op_notes", sa.TEXT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "case_collaborations",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("case_id", sa.INTEGER(), nullable=False),
        sa.Column("session_name", sa.VARCHAR(length=200), nullable=False),
        sa.Column("primary_surgeon", sa.INTEGER(), nullable=False),
        sa.Column("participants", sa.TEXT(), nullable=True),
        sa.Column("scheduled_at", sa.DATETIME(), nullable=True),
        sa.Column("status", sa.VARCHAR(length=20), nullable=True),
        sa.Column("notes", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["case_id"],
            ["cases.id"],
        ),
        sa.ForeignKeyConstraint(
            ["primary_surgeon"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_case_collaborations_id", "case_collaborations", ["id"], unique=False
    )
    op.create_table(
        "study_results",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("study_name", sa.VARCHAR(length=200), nullable=False),
        sa.Column("study_type", sa.VARCHAR(length=50), nullable=False),
        sa.Column("participants", sa.INTEGER(), nullable=True),
        sa.Column("duration_months", sa.INTEGER(), nullable=True),
        sa.Column("methodology", sa.TEXT(), nullable=True),
        sa.Column("success_rate", sa.FLOAT(), nullable=True),
        sa.Column("complication_rate", sa.FLOAT(), nullable=True),
        sa.Column("outcomes_data", sa.TEXT(), nullable=True),
        sa.Column("published", sa.BOOLEAN(), nullable=True),
        sa.Column("publication_date", sa.DATETIME(), nullable=True),
        sa.Column("doi", sa.VARCHAR(length=100), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_study_results_id", "study_results", ["id"], unique=False)
    op.create_table(
        "surgical_proposals",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("case_id", sa.INTEGER(), nullable=False),
        sa.Column("proposed_by", sa.INTEGER(), nullable=False),
        sa.Column("title", sa.VARCHAR(length=200), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=False),
        sa.Column("technique", sa.VARCHAR(length=100), nullable=True),
        sa.Column("estimated_duration", sa.INTEGER(), nullable=True),
        sa.Column("study_reference", sa.VARCHAR(length=200), nullable=True),
        sa.Column("validation_data", sa.TEXT(), nullable=True),
        sa.Column("success_rate", sa.FLOAT(), nullable=True),
        sa.Column("status", sa.VARCHAR(length=20), nullable=True),
        sa.Column("regulatory_status", sa.VARCHAR(length=20), nullable=True),
        sa.Column("regulatory_notes", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["case_id"],
            ["cases.id"],
        ),
        sa.ForeignKeyConstraint(
            ["proposed_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_surgical_proposals_id", "surgical_proposals", ["id"], unique=False
    )
    op.create_table(
        "patients",
        sa.Column("id", sa.INTEGER(), nullable=True),
        sa.Column("patient_id", sa.VARCHAR(length=50), nullable=False),
        sa.Column("age", sa.INTEGER(), nullable=True),
        sa.Column("gender", sa.VARCHAR(length=10), nullable=True),
        sa.Column("bmi", sa.FLOAT(), nullable=True),
        sa.Column("medical_history", sa.TEXT(), nullable=True),
        sa.Column(
            "created_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_patients_bmi",
        "patients",
        ["bmi"],
        unique=False,
        sqlite_where=sa.text("bmi IS NOT NULL"),
    )
    op.create_index(
        "idx_patients_age_gender",
        "patients",
        ["age", "gender"],
        unique=False,
        sqlite_where=sa.text("age IS NOT NULL"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("username", sa.VARCHAR(), nullable=False),
        sa.Column("email", sa.VARCHAR(), nullable=False),
        sa.Column("hashed_password", sa.VARCHAR(), nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), nullable=True),
        sa.Column("role", sa.VARCHAR(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "enhanced_cases",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("case_number", sa.VARCHAR(length=20), nullable=False),
        sa.Column("patient_id", sa.VARCHAR(length=50), nullable=False),
        sa.Column("surgeon_id", sa.VARCHAR(length=50), nullable=True),
        sa.Column("procedure_type", sa.VARCHAR(length=100), nullable=False),
        sa.Column("diagnosis", sa.VARCHAR(length=200), nullable=True),
        sa.Column("status", sa.VARCHAR(length=20), nullable=True),
        sa.Column("priority", sa.VARCHAR(length=20), nullable=True),
        sa.Column("scheduled_date", sa.DATETIME(), nullable=True),
        sa.Column("actual_start", sa.DATETIME(), nullable=True),
        sa.Column("actual_end", sa.DATETIME(), nullable=True),
        sa.Column("risk_score", sa.FLOAT(), nullable=True),
        sa.Column("recommendations", sa.TEXT(), nullable=True),
        sa.Column("notes", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.Column("created_by", sa.VARCHAR(length=50), nullable=True),
        sa.Column("updated_by", sa.VARCHAR(length=50), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_enhanced_cases_id", "enhanced_cases", ["id"], unique=False)
    op.create_index(
        "ix_enhanced_cases_case_number", "enhanced_cases", ["case_number"], unique=False
    )
    op.create_table(
        "surgeon_consents",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("proposal_id", sa.INTEGER(), nullable=False),
        sa.Column("surgeon_id", sa.INTEGER(), nullable=False),
        sa.Column("consent_type", sa.VARCHAR(length=50), nullable=False),
        sa.Column("comments", sa.TEXT(), nullable=True),
        sa.Column("confidence_score", sa.FLOAT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["proposal_id"],
            ["surgical_proposals.id"],
        ),
        sa.ForeignKeyConstraint(
            ["surgeon_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_surgeon_consents_id", "surgeon_consents", ["id"], unique=False)
    op.create_table(
        "deliverables",
        sa.Column("id", sa.VARCHAR(length=50), nullable=False),
        sa.Column("type", sa.VARCHAR(length=50), nullable=False),
        sa.Column("title", sa.VARCHAR(length=200), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("case_id", sa.INTEGER(), nullable=True),
        sa.Column("format", sa.VARCHAR(length=20), nullable=False),
        sa.Column("status", sa.VARCHAR(length=20), nullable=True),
        sa.Column("file_path", sa.VARCHAR(length=500), nullable=True),
        sa.Column("file_size", sa.INTEGER(), nullable=True),
        sa.Column("deliverable_metadata", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.Column("created_by", sa.VARCHAR(length=50), nullable=True),
        sa.Column("reviewed_by", sa.VARCHAR(length=50), nullable=True),
        sa.Column("approved_at", sa.DATETIME(), nullable=True),
        sa.Column("published_at", sa.DATETIME(), nullable=True),
        sa.Column("expires_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_deliverables_id", "deliverables", ["id"], unique=False)
    op.create_table(
        "media_files",
        sa.Column("id", sa.VARCHAR(length=36), nullable=False),
        sa.Column("patient_id", sa.VARCHAR(length=20), nullable=False),
        sa.Column("case_id", sa.VARCHAR(length=36), nullable=True),
        sa.Column("media_type", sa.VARCHAR(length=20), nullable=False),
        sa.Column("title", sa.VARCHAR(length=200), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("file_path", sa.VARCHAR(length=500), nullable=False),
        sa.Column("original_filename", sa.VARCHAR(length=255), nullable=False),
        sa.Column("file_size", sa.INTEGER(), nullable=False),
        sa.Column("content_type", sa.VARCHAR(length=100), nullable=True),
        sa.Column("tags", sa.TEXT(), nullable=True),
        sa.Column("metadata", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_media_files_patient_id", "media_files", ["patient_id"], unique=False
    )
    op.create_index("ix_media_files_id", "media_files", ["id"], unique=False)
    op.create_index(
        "ix_media_files_created_at", "media_files", ["created_at"], unique=False
    )
    op.create_index("ix_media_files_case_id", "media_files", ["case_id"], unique=False)
    op.create_table(
        "messages",
        sa.Column("id", sa.VARCHAR(length=50), nullable=False),
        sa.Column("type", sa.VARCHAR(length=50), nullable=False),
        sa.Column("sender_id", sa.VARCHAR(length=50), nullable=True),
        sa.Column("recipient_id", sa.VARCHAR(length=50), nullable=True),
        sa.Column("title", sa.VARCHAR(length=200), nullable=False),
        sa.Column("content", sa.TEXT(), nullable=False),
        sa.Column("priority", sa.VARCHAR(length=20), nullable=True),
        sa.Column("status", sa.VARCHAR(length=20), nullable=True),
        sa.Column("message_metadata", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.Column("read_at", sa.DATETIME(), nullable=True),
        sa.Column("expires_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_messages_id", "messages", ["id"], unique=False)
    op.create_table(
        "sync_jobs",
        sa.Column("id", sa.VARCHAR(length=50), nullable=False),
        sa.Column("resource_type", sa.VARCHAR(length=50), nullable=False),
        sa.Column("resource_id", sa.VARCHAR(length=50), nullable=True),
        sa.Column("target_system", sa.VARCHAR(length=100), nullable=False),
        sa.Column("status", sa.VARCHAR(length=20), nullable=True),
        sa.Column("sync_type", sa.VARCHAR(length=20), nullable=True),
        sa.Column("priority", sa.VARCHAR(length=20), nullable=True),
        sa.Column("progress", sa.INTEGER(), nullable=True),
        sa.Column("error_message", sa.TEXT(), nullable=True),
        sa.Column("sync_metadata", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.Column("started_at", sa.DATETIME(), nullable=True),
        sa.Column("completed_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_sync_jobs_id", "sync_jobs", ["id"], unique=False)
    op.create_table(
        "protocols",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("version", sa.VARCHAR(length=20), nullable=True),
        sa.Column("procedure_type", sa.VARCHAR(length=50), nullable=True),
        sa.Column("steps", sa.TEXT(), nullable=True),
        sa.Column("guidelines", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_protocols_id", "protocols", ["id"], unique=False)
    # ### end Alembic commands ###
